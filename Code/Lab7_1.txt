library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity Lab07_01 is
generic(divisor: integer := 50_000_000);
port( CLK:in std_logic;
		clock_out: buffer std_logic;
		LEDG : OUT std_logic_vector(7 downto 0);
		KEY : IN STD_logic_vector(1 to 1);
		INV_OUT:out std_logic_vector(7 downto 0));
		
end Lab07_01;

architecture arch of Lab07_01 is
signal count: integer range 0 to divisor := 0;
signal SHIFT_OUT:std_logic_vector(7 downto 0);
signal CLK_OUT:std_logic;
begin

--(1)除頻電路 
process(CLK,KEY)
begin
	if KEY(1)='0' then 
		count <= 0;
	elsif CLK'event and CLK='1' then
		if count < divisor / 2 -1 then
			count <= count + 1;
		else
			count <= 0;
			CLK_OUT<= not CLK_OUT;
		end if;
	end if;
	clock_out <= CLK_OUT;
end process;


--(2)LED 移位電路 
process(clock_out,KEY)
begin
	if KEY(1)='0' then
		SHIFT_OUT<="10000000";
	elsif clock_out'event and clock_out='1' then
		SHIFT_OUT<=SHIFT_OUT(0)&SHIFT_OUT(7 downto 1);
	end if;
end process;

--(3)反向電路
INV_OUT<=not(SHIFT_OUT);
LEDG <= not(SHIFT_OUT);
end arch;

