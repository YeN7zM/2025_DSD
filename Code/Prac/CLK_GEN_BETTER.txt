library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity prac is
    port( 
        KEY    : in std_logic_vector(1 to 1);
        CLOCK_50    : in std_logic;
        --INV_OUT: out std_logic_vector(7 downto 0);
        LEDG   : out std_logic_vector(7 downto 0)
    );
end prac;

architecture arch of prac is
     constant divisor : INTEGER :=49999999 ; -- 2 means the divisor factor
     signal count : INTEGER range 0 to divisor:=0;
    --signal DIVIDER   : std_logic_vector(25 downto 0);
    signal SHIFT_CLK : std_logic;
    signal SHIFT_OUT : std_logic_vector(7 downto 0):="10000000";
begin

    -- (1) 除頻電路
    process(CLOCK_50, KEY)
    begin
          if KEY(1) = '0' then
                count <= 0;
        elsif CLOCK_50'event and CLOCK_50='1' then
            if count < divisor / 2 - 1  then
                    count <= count + 1;
                else 
                    count <= 0;
                    SHIFT_CLK <= NOT SHIFT_CLK;
                end if;
        end if;
    end process;

    --SHIFT_CLK <= DIVIDER(25);  -- 降低除頻位元，加快移動速度

    -- (2) LED 右移位電路
    process(SHIFT_CLK, KEY)
    begin
          if KEY(1) =  '0' then
                SHIFT_OUT <= "10000000";
        elsif SHIFT_CLK'event and SHIFT_CLK = '1' then
            SHIFT_OUT <= SHIFT_OUT(0)&SHIFT_OUT(7 downto 1);  -- 右循環移位
        end if;           -- 直接顯示原始 LED 狀態      
    end process;
     LEDG <= SHIFT_OUT;
end arch;